
spring.security.oauth2.client.registration:
  google:
    # Google OAuth 2 client app can be setup at https://console.developers.google.com/apis/credentials            
    clientId: 1034653135442-j27ijg9om55p2ascg1gurbj3sp46iuek.apps.googleusercontent.com
    clientSecret: kmcGAl5meGxwwUdvHnnmv_Se
  github:
    # GitHub OAuth 2 client app can be setup at https://github.com/settings/developers            
    clientId: e0737f257e60beee40e6
    clientSecret: 5429b3fba0e197e576d5e64bcbb4661b3bc48312

#spring.security.oauth2.client.registration.ourauthserver.clientId: 233668646673605
#spring.security.oauth2.client.registration.ourauthserver.clientSecret: 33b17e044ee6a4fa383f46ec6e28ea1d
#spring.security.oauth2.client.registration.ourauthserver.clientName=ourauthserver
#spring.security.oauth2.client.registration.ourauthserver.scope=read:user
#spring.security.oauth2.client.registration.ourauthserver.client-authentication-method=
#spring.security.oauth2.client.registration.ourauthserver.
#spring.security.oauth2.client.registration.ourauthserver.
#spring.security.oauth2.client.registration.ourauthserver.
#            
#			ClientRegistration.Builder builder = getBuilder(registrationId,
#					ClientAuthenticationMethod.BASIC, DEFAULT_LOGIN_REDIRECT_URL);
#			builder.scope("read:user");
#			builder.authorizationUri("https://github.com/login/oauth/authorize");
#			builder.tokenUri("https://github.com/login/oauth/access_token");
#			builder.userInfoUri("https://api.github.com/user");
#			builder.userNameAttributeName("id");
#			builder.clientName("GitHub");            
#            
#            
#security:
#  oauth2:
#    client:
#      accessTokenUri: https://graph.facebook.com/oauth/access_token
#      userAuthorizationUri: https://www.facebook.com/dialog/oauth
#      tokenName: oauth_token
#      authenticationScheme: query
#      clientAuthenticationScheme: form
#    resource:
#      userInfoUri: https://graph.facebook.com/me            


# Probably prefer to set this to true in production:
spring.thymeleaf.cache=false

# This setting keeps Spring Cloud AWS from trying (and failing) to identify
# the CloudFormation stack on which the deployment is running.  It does this 
# do you can inject things by their logical names in the template rather than 
# physical names.  Since it always makes the app blow up on BeanStalk, I'm 
# turning it off.
# See https://github.com/spring-cloud/spring-cloud-aws/issues/50:
cloud.aws.stack.auto = false

# This disables Spring Session:
#spring.session.store-type=none

spring.session.store-type=redis
#spring.redis.host=testcluster.9evura.0001.usw2.cache.amazonaws.com
#spring.redis.password= # Login password of the redis server.
spring.redis.port=6379 
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.

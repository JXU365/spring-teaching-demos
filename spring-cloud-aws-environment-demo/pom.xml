<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>spring-cloud-aws-environment-demo</artifactId>
	<version>1</version>
	<packaging>war</packaging>

	<name>spring-cloud-aws-environment-demo</name>
	<description>Spring Cloud AWS - Demo of environment</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>kennyk65</docker.image.prefix>
 	</properties>

	<dependencies>
		<!-- Web capability -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

		<!-- Templating framework for web pages -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Awareness of the AWS environment -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-aws</artifactId>
		</dependency>
		
		<!-- Enables actuator endpoints like /beans, /env, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!-- Enables /actuator endpoint itself -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Allow for automatic restarts when classpath contents change. -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <optional>true</optional>
	    </dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
 		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Useful plugin for deploying straight to Beanstalk. -->
		    <plugin>
		      <groupId>br.com.ingenieux</groupId>
		      <artifactId>beanstalk-maven-plugin</artifactId>
		      <version>1.5.0</version>
		    </plugin>
		    
           	<!--  mvn package docker:build -DpushImage -->
	      <!--  <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.4.13</version>
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
	        </plugin>  -->
	        
           	<!--  This is Spotify's new, replacement plugin for docker
           	mvn package  -->

			<plugin>
			  <groupId>com.spotify</groupId>
			  <artifactId>dockerfile-maven-plugin</artifactId>
			  <version>1.3.6</version>
			  <executions>
			    <execution>
			      <id>default</id>
			      <goals>
			        <goal>build</goal>
			        <goal>push</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
			    <repository>${docker.image.prefix}/${project.artifactId}</repository>
			    <tag>${project.version}</tag>
			    <buildArgs>
			      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
			    </buildArgs>
			  </configuration>
			  <!-- This dependency is needed to keep the plugin from blowing up with java 9. -->
                <dependencies>
                    <dependency>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>			
            </plugin>	        
		</plugins> 
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>
